/* @flow */

import {end, time, flattenDeep} from './utils'

import Drawable, {config, type Drawable_t} from './Drawable'
import Tileset from './Tileset'
import Player from './Player'
import World, {world, addPlayer} from './World'
import {openSimplex} from './Map'
import move from './Movement'
import { computeFOV } from './FOV'
import Wiki from './Wiki'

import fs, { writeFileSync } from 'fs'

import express from 'express'
import {app, ws_app} from './express'

if (process.argv.find(e => e == '--log' || e == '-l'))
  writeFileSync("multivers.log", "")

addPlayer(world, new Player(world, {
  name: "local",
  ip: "127.0.0.1",
}))

// Tileset({
//   path: 'assets/lpc-terrains/',
//   tilemap: 'terrain-v7.tsx'
// })

/** What yp ? */
let isUser = (req: express$Request, res, next) => {
  if (world.players.filter(e => e.ip == req.connection.remoteAddress)[0])
    next()
  else {
    res.status(400).end()
  }
}

let debug = (req: express$Request, res, next) => {
  console.log(`${req.url}: ${req.headers.user ? req.headers.user.name : "no user defined"}`)
  next()
}

app.use(debug)

/**
 * @api {get} / root
 * @apiName Root
 * @apiGroup All
 */
app.use('/', express.static('client'))
app.use('/api', express.static('docs/apidoc'))
app.use('/doc', express.static('docs/reference'))
// app.use('/wiki', jingo_app)

require('./get').default(app)

/**
 * @api {get} /tile/:name Access a particular tile
 * @apiName tile
 * @apiGroup User
 */
app.get('/tile/:name', isUser, (req: express$Request, res: express$Response) => {
  // console.log(world.tiles, req.params.name)
  res.end( JSON.stringify(world.tiles[req.params.name]) )
})

app.listen(4242, 'localhost', () => end('init'));
