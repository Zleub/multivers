/* @flow */

import { ws_app } from '../express'
import crypto from 'crypto'
import { users, user_to_string } from '../user'

export default function (req: express$Request, res, next) {
  let { user } = req.headers

  if (user.connected) {
    return res.end( user_to_string(user) )
  }

  // TODO: user init
  user.connected = false
  user.chunks = []

  user.token = crypto.createHmac('sha256', Date.now().toString() + JSON.stringify(user.ip)).digest('hex');
  ws_app.ws(`/${user.token}.ws`, function(ws, req) {
    user.connected = true
    user.ws = ws
    ws.on('message', function(msg) { console.log(msg) })
    ws.on('close', function(msg) {
      console.log('close ' + user.token)
      user.connected = false
    })
    ws.on('pong', function(){
      user.connected = true
    });
  })
  setTimeout(() => {
    if (!user.connected) {
      console.log('delete ' + user.token)
      ws_app.delete('/' + user.token)
    }
  }, 10000);

  res.end( user_to_string(user) )
}
